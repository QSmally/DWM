

*dwm*   Tiling window manager for Vim


==============================================================================
CONTENTS                                                        *dwm-contents*

    1. Introduction............................|dwm-introduction|
    2. Commands................................|dwm-commands|
    3. Mappings................................|dwm-mappings|
    4. Options.................................|dwm-options|
    5. Changelog...............................|dwm-changelog|
    6. Credits.................................|dwm-credits|
    7. License.................................|dwm-license|


==============================================================================
INTRODUCTION                                                *dwm-introduction*

DWM adds tiled window management to Vim. It's highly inspired by the Dynamic
Window Manager tiled layouts.

Windows are always organised defined by the following layout, consisting of a
master pane on the left and a stacked pane on the right. QuickFix and floating
panes are ignored by the layout controller.

    +--------------+------------------+
    |              |        S1        |
    |              | ---------------- |
    |      M0      |        S2        |
    |              | ---------------- |
    |              |        S3        |
    +--------------+------------------+

GitHub archive:

    https://github.com/QSmally/DWM

Currently, DWM supports a one-column mode when Vim's width is low (such as
dual-screen preview/editor setups) and ignores the QuickFix window in its
panes. In the future, DWM will render around fixed-width windows such as those
provided by VimFiler, Minimap and Visual Split.


==============================================================================
COMMANDS                                                        *dwm-commands*

                                                         *:New* *:Close* *:Switch*
Management~
    Management commands which creates a new window with an empty or file-
    populated buffer in the master or stack pane, closes the focussed window
    or switches the current window to the master pane viewport.

                                                                   *:WRR* *:WRL*
Rotation~
    Performs a clockwise or counter clockwise rotate operation on all the
    windows, including the master pane, for Window Rotate Right or Window
    Rotate Left.

                                                                   *:WBR* *:WBL*
Barrier~
    Moving the center barrier between the master and stack panes either with
    Window Barrier Right or Window Barrier Left.


==============================================================================
MAPPINGS                                                        *dwm-mappings*

When |'g:dwm_default_keys'| is not defined or set to 1, the following keys are
mapped to the commands in |dwm-commands| if they haven't been overwritten by a
map yet:

  <C-N>     |:New|        new empty master pane window
  <C-P>     |:New[!]|...  opens dmenu-like prompt for the master or stack pane
  [w]<C-C>  |:[w]Close|   close |[w]| or current window
  [w]<C-@>  |:[w]Switch|  focus |[w]|, current or first window on master pane
            |:WRR|        rotate window layout right
            |:WRL|        rotate window layout left
  <C-L>     |:WBR|        move center barrier right
  <C-H>     |:WBL|        move center barrier left
  <C-J>                 change cursor position to next window
  <C-K>                 change cursor position to previous window
  <C-M>                 jump cursor position to first/master pane

*[w]* is the stacked pane viewport number starting at 1. See the visual layout.

To customise the mapping, you can override the default Plug bindings:
>
    nnoremap <Nop> <Plug>(dwm_rotate_right)
    nnoremap <Nop> <Plug>(dwm_rotate_left)
    nnoremap <C-N> <Plug>(dwm_new_window)
    nnoremap <C-C> <Plug>(dwm_close_window)
    nnoremap <C-@> <Plug>(dwm_focus_window)
    nnoremap <C-L> <Plug>(dwm_barrier_right)
    nnoremap <C-H> <Plug>(dwm_barrier_left)
<


==============================================================================
OPTIONS                                                          *dwm-options*

                                                        *'g:dwm_default_keys'*
Default: 1
If enabled, DWM maps default keys to the commands.
>
    let g:dwm_default_keys = 0
<

                                                        *'g:dwm_enable_width'*
Default: 162
Total column width in order to enable automatic relayout management.
>
    let g:dwm_enable_width = 170
<

                                                   *'g:dwm_master_pane_width'*
Default: ?
Set the width of the master pane. If the value is given as a string, the width
will be set to a relative percentage of the editor's width, otherwise the
absolute column value.
>
    " Example: set master pane width to 85 columns
    let g:dwm_master_pane_width = 85
    
    " Example: set master pane width to 60% of editor width
    let g:dwm_master_pane_width = '60%'
<

                                      *'g:dwm_skip_width'* *'g:dwm_skip_height'*
Default: 40, 6
A column and row value to skip automatically resizing the layout when a
viewport entered with either of those dimensions.
>
    " Example: set width to skip to 100 columns
    let g:dwm_skip_width = 50

    " Example: set height to skip to 16 rows
    let g:dwm_skip_width = 8
<


==============================================================================
CHANGELOG                                                      *dwm-changelog*

= 0.2.4
    - :New[!] with filename, stack panel and <C-P> dmenu binding
= 0.2.3
    - modifiers to close and focus bindings
    - add <C-M> binding to return to master pane from any stacked viewport
    - fix creating two-column layout when in single-column mode
= 0.2.2
    - fix layout for QuickFix windows
    - use 'quit' instead of 'close' for :Close, for andrewradev/undoquit.vim
= 0.2.1
    - support for 'vim -o files...' (not yet vertical 'vim -O files...')
    - minimum total columns for DMW to enable (|g:dwm_enable_width|)
    - guard for closing last window
= 0.2.0
    - breaking changes for the internal Plug API
< 0.2.0
    - previously maintained version


==============================================================================
CREDITS                                                          *dwm-credits*

Maintained by

    Joey Smalen (QSmally, Smally)

Maintained previously by

    Stanislas Polu (spolu)

Contributors in alphabetical order

    Dan Sapala (dsapala)
    Matthias Vogelgesang (matze)
    mitnk (mitnk)
    Tony Narlock (tony)
    rhacker (rhacker)
    Larry Marburger (lmarburger)
    Adrien (afriggeri)


==============================================================================
LICENSE                                                          *dwm-license*

See Vim license with :h |license|.


