

*dwm*   Tiling window manager for Vim


==============================================================================
CONTENTS                                                        *dwm-contents*

    1. Intro...................................|dwm-intro|
    2. Commands................................|dwm-commands|
    3. Mappings................................|dwm-mappings|
    4. Options.................................|dwm-options|
    5. Changelog...............................|dwm-changelog|
    6. Credits.................................|dwm-credits|
    7. License.................................|dwm-license|


==============================================================================
INTRO                                                              *dwm-intro*

DWM adds tiled window management to Vim. It is highly inspired by the Dynamic
Window Manager tiled layout.

Windows are always organised defined by the following layout, consisting of a
master pane on the left and a stacked pane on the right side. QuickFix and
floating windows are ignored by the layout.

    +--------------+------------------+
    |              |        S1        |
    |              | ---------------- |
    |      M       |        S2        |
    |              | ---------------- |
    |              |        S3        |
    +--------------+------------------+

GitHub archive:

    https://github.com/QSmally/DWM

Currently, DWM supports low-width sessions (such as dual-screen preview/editor
setups) and ignores the QuickFix window. In the future, DWM will render around
fixed-width windows such as those provided by VimFiler, Minimap and Visual
Split.


==============================================================================
COMMANDS                                                        *dwm-commands*

Management                                               *:New* *:Close* *:Switch*
    Management commands which creates a new window with an empty buffer in the
    master pane, closes the focussed window or switches the current window to
    the master pane viewport.

Rotation                                                           *:WRR* *:WRL*
    Performs a clockwise or counter clockwise rotate operation on all the
    windows, including the master pane, for Window Rotate Right or Window
    Rotate Left.

Barrier                                                            *:WBR* *:WBL*
    Moving the center barrier between the master and stack panes either with
    Window Barrier Right or Window Barrier Left.


==============================================================================
MAPPINGS                                                        *dwm-mappings*

When |'g:dwm_default_keys'| is not defined or set to 1, the following keys are
mapped to the commands in |dwm-commands| if they haven't been overwritten by a
map yet:

  <C-N>     |:New|      new window as empty buffer viewport
  <C-C>     |:Close|    close current window
  <C-Space> |:Switch|   switch current window to master pane
            |:WRR|      rotate windows right
            |:WRL|      rotate windows left
  <C-L>     |:WBR|      move barrier right
  <C-H>     |:WBL|      move barrier left
  <C-J>               change cursor to next window
  <C-K>               change cursor to previous window


==============================================================================
OPTIONS                                                          *dwm-options*

                                                        *'g:dwm_default_keys'*
Default: 1
If enabled, DWM maps default keys to the commands.
>
    let g:dwm_default_keys = 0
<

                                                        *'g:dwm_enable_width'*
Default: 162
Total column width in order to enable automatic relayout management.
>
    let g:dwm_enable_width = 170
<

                                                   *'g:dwm_master_pane_width'*
Default: ?
Set the width of the master pane. If the value is given as a string, the width
will be set to a relative percentage of the editor's width, otherwise the
absolute column value.
>
    " Example: set master pane width to 85 columns
    let g:dwm_master_pane_width = 85
    
    " Example: set master pane width to 60% of editor width
    let g:dwm_master_pane_width = "60%"
<

                                      *'g:dwm_skip_width'* *'g:dwm_skip_height'*
Default: 40, 6
A column and row value to skip automatically resizing the layout when a
viewport entered with either of those dimensions.
>
    " Example: set width to skip to 100 columns
    let g:dwm_skip_width = 50

    " Example: set height to skip to 16 rows
    let g:dwm_skip_width = 8
<


==============================================================================
CHANGELOG                                                      *dwm-changelog*

= 0.2.2
    - layout fixes for QuickFix windows
    - use 'quit' instead of 'close' for :Close, for andrewradev/undoquit.vim
= 0.2.1
    - support for 'vim -o files...' (not yet vertical 'vim -O files...')
    - minimum total columns for DMW to enable (|g:dwm_enable_width|)
    - guard for closing last window
= 0.2.0
    - breaking changes for the internal Plug API
< 0.2.0
    - previously maintained version


==============================================================================
CREDITS                                                          *dwm-credits*

Maintained by

    Joey Smalen (QSmally, Smally)

Maintained previously by

    Stanislas Polu (spolu)

Contributors in alphabetical order

    Dan Sapala (dsapala)
    Matthias Vogelgesang (matze)
    mitnk (mitnk)
    Tony Narlock (tony)
    rhacker (rhacker)
    Larry Marburger (lmarburger)
    Adrien (afriggeri)


==============================================================================
6. License                                                       *dwm-license*

See Vim license.


